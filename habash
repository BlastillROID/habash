#!/usr/bin/env bash

PROGRAM=$(basename $0)
VERSION="1.0.0"

if [ "${DEBUG}" == "1" ]
then
	set -x
fi

habash_help()
{
	cat <<-HELP
	Usage: ${PROGRAM} <command> [command arguments]
	       ${PROGRAM} up "Floss"
	       ${PROGRAM} createtodo "Buy milk"

	Contacts Habitica API through cURL with minimal dependencies.

	Commands available:
	    getidoftask <TASK TEXT>
	    up <TASK_TEXT
	    down <TASK_TEXT>
	    deletetask <TASK_TEXT>
	    createtodo <TASK_TEXT>
	    createhabit <TASK_TEXT>
	    post <API_PATH> [CURL_ARGUMENTS]
	    get <API_PATH> [CURL_ARGUMENTS]
	
	Post issues at https://github.com/nasfarley88/habash/issues
	HELP
}

# Basic commands
#
# These commands should be used to create more complex commands. They are left
# available to the user to do complex things with the api

# Usage: hcurl GET tasks/user
hcurl()
{
	method=$1
	url_path=$2
    # Basic curl wrapper for habitica
    curl -s -H "x-api-key: $HABITICA_TOKEN" \
		-H "x-api-user: $HABITICA_UUID" \
		-X $method \
		https://habitica.com/api/v3/$url_path
}

get()
{
    hcurl GET $1
}

post()
{
    hcurl POST $1
}

put()
{
    hcurl PUT $1
}

del()
{
    hcurl DELETE $1
}

# End of basic commands

# Composite commands
#
# These commands are for convenience. They should use the basic commands above
# as much as possible.

# TODO get this to return just the id or a failed flag
habash_getidoftask()
{
    get tasks/user \
		| grep -Po '"text":.*?"id":.*?,' \
		| grep "\"$*\"" \
		| grep -Po '"id":".*?"' \
		| grep -Po '[-a-f0-9]{36}'
}

habash_deletetask()
{
    del /tasks/$(habash_getidoftask $*)
}

habash_up()
{
    post /tasks/$(habash_getidoftask $*)/score/up
}

habash_down()
{
    post /tasks/$(habash_getidoftask $*)/score/down
}

habash_createtodo()
{
    curl -s \
		-H "x-api-key: $HABITICA_TOKEN" \
		-H "x-api-user: $HABITICA_UUID" \
		-H "Content-Type: application/json" \
		-X POST \
		-d "{\"text\": \"$*\", \"type\": \"todo\"}" \
		https://habitica.com/api/v3/tasks/user
}

habash_createhabit()
{
    curl -s \
		-H "x-api-key: $HABITICA_TOKEN" \
		-H "x-api-user: $HABITICA_UUID" \
		-H "Content-Type: application/json" \
		-X POST \
		-d "{\"text\": \"$*\", \"type\": \"habit\"}" \
		https://habitica.com/api/v3/tasks/user
}

action=$1
shift
habash_${action} $@ 2>/dev/null || echo "$action is not a valid action"
printf "\n"
