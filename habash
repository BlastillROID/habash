#!/usr/bin/env bash

PROGRAM=$(basename $0)
VERSION="1.0.0"

if [ "${DEBUG}" == "1" ]
then
	set -x
fi

habash_help()
{
	cat <<-HELP
	Usage: ${PROGRAM} <command> [command arguments]
	       ${PROGRAM} up "Floss"
	       ${PROGRAM} createtodo "Buy milk"

	Contacts Habitica API through cURL with minimal dependencies.

	Commands available:
	    ls
	    id <TASK TEXT>
	    up <TASK_TEXT>
	    down <TASK_TEXT>
	    delete <TASK_TEXT>
	    todo <TASK_TEXT>
	    habit <TASK_TEXT>
	
	Post issues at https://github.com/nasfarley88/habash/issues
	HELP
}

# Usage: hcurl GET tasks/user
hcurl()
{
    local method=$1
    local url_path=$2

    # Basic curl wrapper for habitica
    curl -s \
         -X $method \
         -d "" \
         -H "Content-Type:application/json" \
         -H "x-api-key: $HABITICA_TOKEN" \
         -H "x-api-user: $HABITICA_UUID" \
         https://habitica.com/api/v3/$url_path
}

habash_ls()
{
    hcurl GET /tasks/user | grep -Po '(?<="text":").*?(?=")'
}

habash_getidoftask()
{
    hcurl GET tasks/user \
		| grep -Po '"text":.*?"id":.*?,' \
		| grep "\"$*\"" \
		| grep -Po '"id":".*?"' \
		| grep -Po '[-a-f0-9]{36}'
}

habash_deletetask()
{
    hcurl DELETE /tasks/$(habash_getidoftask $*)
}

habash_up()
{
    hcurl POST /tasks/$(habash_getidoftask $*)/score/up
}

habash_down()
{
    hcurl POST /tasks/$(habash_getidoftask $*)/score/down
}

habash_createtodo()
{
    curl -s \
		-H "x-api-key: $HABITICA_TOKEN" \
		-H "x-api-user: $HABITICA_UUID" \
		-H "Content-Type: application/json" \
		-X POST \
		-d "{\"text\": \"$*\", \"type\": \"todo\"}" \
		https://habitica.com/api/v3/tasks/user
}

habash_createhabit()
{
    curl -s \
		-H "x-api-key: $HABITICA_TOKEN" \
		-H "x-api-user: $HABITICA_UUID" \
		-H "Content-Type: application/json" \
		-X POST \
		-d "{\"text\": \"$*\", \"type\": \"habit\"}" \
		https://habitica.com/api/v3/tasks/user
}

# Usage: habash_main <action> [optional arguments]
habash_main()
{
	local action=$1
	shift

	if [ -z "${HABITICA_TOKEN}" ]
	then
		echo "Please, make the following environment variable available: HABITICA_TOKEN" 1>&2
		exit 2
	fi

	if [ -z "${HABITICA_UUID}" ]
	then
		echo "Please, make the following environment variable available: HABITICA_UUID" 1>&2
		exit 2
	fi

	case "${action}" in
		ls)
			habash_ls $@
			;;
		getidoftask|id)
			habash_getidoftask $@
			;;
		createtodo|todo)
			habash_createtodo $@
			;;
		deletetask|delete)
			habash_deletetask $@
			;;
		createhabit|habit)
			habash_createhabit $@
			;;
		up)
			habash_up $@
			;;
		down)
			habash_down $@
			;;
		help|-h|--help)
			habash_help
			;;
		*)
			echo "${action} is not a valid action (use'${PROGRAM} help' for more information)."
			exit 2
			;;
	esac
}

habash_main $@
printf "\n"
